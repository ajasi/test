openapi: 3.0.0
info:
  title: Chocolate Factory API
  version: 1.0.0
  description: API for managing chocolate factories, chocolates, users, carts, purchases, and comments.
servers:
  - url: http://localhost:3000
    description: Local server

paths:
  /:
    get:
      summary: Welcome message
      responses:
        '200':
          description: Successful response
          content:
            text/plain:
              schema:
                type: string

  /register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Username already exists

  /login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: User logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Invalid credentials

  /users/{username}:
    put:
      summary: Update user information
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
          description: The username of the user to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated
        '404':
          description: User not found
    delete:
      summary: Logically delete a user
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
          description: The username of the user to delete
      responses:
        '200':
          description: User deleted
        '404':
          description: User not found

  /factories:
    get:
      summary: Get all factories
      responses:
        '200':
          description: A list of factories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Factory'
    post:
      summary: Create a new factory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Factory'
      responses:
        '201':
          description: Factory created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Factory'

  /factories/{id}:
    get:
      summary: Get a factory by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the factory
      responses:
        '200':
          description: A factory object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Factory'
        '404':
          description: Factory not found
    put:
      summary: Update a factory by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the factory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Factory'
      responses:
        '200':
          description: Factory updated
        '404':
          description: Factory not found
    delete:
      summary: Logically delete a factory by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the factory
      responses:
        '200':
          description: Factory deleted
        '404':
          description: Factory not found

  /factories/name/{name}:
    get:
      summary: Get a factory by name
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
          description: The name of the factory
      responses:
        '200':
          description: A factory object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Factory'
        '404':
          description: Factory not found

  /factories/{id}/chocolates:
    get:
      summary: Get all chocolates in a factory
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the factory
      responses:
        '200':
          description: A list of chocolates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Chocolate'
        '404':
          description: Factory not found
    post:
      summary: Create a new chocolate in a factory
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the factory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Chocolate'
      responses:
        '201':
          description: Chocolate created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chocolate'

  /factories/{id}/chocolates/{chocolateId}:
    get:
      summary: Get a chocolate by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the factory
        - in: path
          name: chocolateId
          required: true
          schema:
            type: integer
          description: The ID of the chocolate
      responses:
        '200':
          description: A chocolate object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chocolate'
        '404':
          description: Chocolate not found
    put:
      summary: Update a chocolate by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the factory
        - in: path
          name: chocolateId
          required: true
          schema:
            type: integer
          description: The ID of the chocolate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Chocolate'
      responses:
        '200':
          description: Chocolate updated
        '404':
          description: Chocolate not found
    delete:
      summary: Logically delete a chocolate by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the factory
        - in: path
          name: chocolateId
          required: true
          schema:
            type: integer
          description: The ID of the chocolate
      responses:
        '200':
          description: Chocolate deleted
        '404':
          description: Chocolate not found

  /factories/{id}/chocolates/name/{chocolateName}:
    get:
      summary: Get a chocolate by name
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the factory
        - in: path
          name: chocolateName
          required: true
          schema:
            type: string
          description: The name of the chocolate
      responses:
        '200':
          description: A chocolate object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chocolate'
        '404':
          description: Chocolate not found

  /factories/{id}/purchases:
    get:
      summary: Get all purchases in a factory
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the factory
      responses:
        '200':
          description: A list of purchases
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Purchase'
        '404':
          description: Factory not found
    post:
      summary: Create a new purchase in a factory
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the factory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Purchase'
      responses:
        '201':
          description: Purchase created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purchase'

  /factories/{id}/purchases/{purchaseId}:
    get:
      summary: Get a purchase by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the factory
        - in: path
          name: purchaseId
          required: true
          schema:
            type: integer
          description: The ID of the purchase
      responses:
        '200':
          description: A purchase object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purchase'
        '404':
          description: Purchase not found
    put:
      summary: Update a purchase by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the factory
        - in: path
          name: purchaseId
          required: true
          schema:
            type: integer
          description: The ID of the purchase
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Purchase'
      responses:
        '200':
          description: Purchase updated
        '404':
          description: Purchase not found
    delete:
      summary: Logically delete a purchase by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the factory
        - in: path
          name: purchaseId
          required: true
          schema:
            type: integer
          description: The ID of the purchase
      responses:
        '200':
          description: Purchase deleted
        '404':
          description: Purchase not found

  /factories/{id}/comments:
    get:
      summary: Get all comments in a factory
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the factory
      responses:
        '200':
          description: A list of comments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
        '404':
          description: Factory not found
    post:
      summary: Create a new comment in a factory
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the factory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '201':
          description: Comment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'

  /factories/{id}/comments/{commentId}:
    get:
      summary: Get a comment by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the factory
        - in: path
          name: commentId
          required: true
          schema:
            type: integer
          description: The ID of the comment
      responses:
        '200':
          description: A comment object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '404':
          description: Comment not found
    put:
      summary: Update a comment by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the factory
        - in: path
          name: commentId
          required: true
          schema:
            type: integer
          description: The ID of the comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '200':
          description: Comment updated
        '404':
          description: Comment not found
    delete:
      summary: Logically delete a comment by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the factory
        - in: path
          name: commentId
          required: true
          schema:
            type: integer
          description: The ID of the comment
      responses:
        '200':
          description: Comment deleted
        '404':
          description: Comment not found

components:
  schemas:
    User:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        gender:
          type: string
        birthDate:
          type: string
        role:
          type: string
        deleted:
          type: boolean

    Login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string

    Factory:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        location:
          $ref: '#/components/schemas/Location'
        workingHours:
          type: string
        status:
          type: string
        logo:
          type: string
        managerUsername:
          type: string
        rating:
          type: number
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        chocolates:
          type: array
          items:
            $ref: '#/components/schemas/Chocolate'
        purchases:
          type: array
          items:
            $ref: '#/components/schemas/Purchase'
        deleted:
          type: boolean

    Location:
      type: object
      properties:
        id:
          type: integer
        longitude:
          type: number
        latitude:
          type: number
        address:
          type: string
        deleted:
          type: boolean

    Chocolate:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        price:
          type: number
        type:
          type: string
        kind:
          type: string
        weight:
          type: number
        description:
          type: string
        image:
          type: string
        status:
          type: string
        quantity:
          type: number
        deleted:
          type: boolean

    Purchase:
      type: object
      properties:
        id:
          type: integer
        chocolates:
          type: array
          items:
            $ref: '#/components/schemas/Chocolate'
        date:
          type: string
        totalPrice:
          type: number
        username:
          type: string
        status:
          type: string
        deleted:
          type: boolean

    Comment:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        text:
          type: string
        rating:
          type: number
        deleted:
          type: boolean
